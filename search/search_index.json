{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welkom bij de DSMRlogger2HTTP Documentatie Ga voor de volledige project beschrijving naar www.aandewiel.nl . Het idee Zo langzamerhand zijn alle huizen in Nederland uitgerust met een \u201cSlimme Meter\u201d. Deze meters beschikken over een \"P1\" poort, deze poort kan worden uitgelezen. Dit project stelt je in staat dit zelf thuis uit te lezen en de gegevens op een door jouw gewenst formaat te presenteren dmv een \"DSMR logger\". Er zijn commerciele P1 oplossingen beschikbaar, dit project geeft je aanzienlijk meer controle over de kosten en de gegevens. DSMR is een acroniem voor Dutch Smart Meter Requirements De doelstellingen van de DSMR logger: Moet eenvoudig en goedkoop gemaakt kunnen worden. Moet \u201cOver The Air\u201d ge-update kunnen worden. Moet een beperkte historie hebben die intern opgeslagen word. Moet via een externe terminal benaderd kunnen worden (telnet). Moet via een browser de gegevens kunnen presenteren. Moet via een REST API de gegevens kunnen leveren. Moet gegevens eenvoudig verder laten verwerken. Inhoudsopgave Bouwbeschrijving Installatie ArduinoIDE Installatie Bibliotheken Firmware Clonen van Github Uploaden Firmware naar ESP-01 Uploaden Data naar ESP-01 Verschillen ESP-01 modules","title":"Welkom bij de DSMRlogger2HTTP Documentatie"},{"location":"#welkom-bij-de-dsmrlogger2http-documentatie","text":"Ga voor de volledige project beschrijving naar www.aandewiel.nl .","title":"Welkom bij de DSMRlogger2HTTP Documentatie"},{"location":"#het-idee","text":"Zo langzamerhand zijn alle huizen in Nederland uitgerust met een \u201cSlimme Meter\u201d. Deze meters beschikken over een \"P1\" poort, deze poort kan worden uitgelezen. Dit project stelt je in staat dit zelf thuis uit te lezen en de gegevens op een door jouw gewenst formaat te presenteren dmv een \"DSMR logger\". Er zijn commerciele P1 oplossingen beschikbaar, dit project geeft je aanzienlijk meer controle over de kosten en de gegevens. DSMR is een acroniem voor Dutch Smart Meter Requirements De doelstellingen van de DSMR logger: Moet eenvoudig en goedkoop gemaakt kunnen worden. Moet \u201cOver The Air\u201d ge-update kunnen worden. Moet een beperkte historie hebben die intern opgeslagen word. Moet via een externe terminal benaderd kunnen worden (telnet). Moet via een browser de gegevens kunnen presenteren. Moet via een REST API de gegevens kunnen leveren. Moet gegevens eenvoudig verder laten verwerken.","title":"Het idee"},{"location":"#inhoudsopgave","text":"Bouwbeschrijving Installatie ArduinoIDE Installatie Bibliotheken Firmware Clonen van Github Uploaden Firmware naar ESP-01 Uploaden Data naar ESP-01 Verschillen ESP-01 modules","title":"Inhoudsopgave"},{"location":"ESP01FlashMode/","text":"ESP01 - Flash mode De ESP-01 heeft geen flash/reset \"knopje\" en vereist dat GPIO0 naar GND gepulled wordt en GPIO2 high naar 3.3v om in flash mode te komen. Er zijn hier meerdere wegen naar Rome mogelijk. Het makkelijkst kan dit met een ESP programmer. Deze zijn goedkoop verkrijgbaar, maar vereisen mogelijk modificaties voor de ESP01. Hier vind je een beschrijving hoe je zelf zo'n programmer kunt maken. Heb je een breadboard en een FTDI serial USB adapter voor handen, dan kun je daarmee zelf ook een programmer mee maken door het op de volgende manier aansluiten van deze onderdelen. van naar FTDI GND Breadboard - FTDI +3.3v Breadboard + FTDI TX ESP01 RX FTDI RX ESP01 TX ESP01 GPIO2 Breadboard + ESP01 GPIO0 Breadboard - ESP01 GND Breadboard - ESP01 3v3 Breadboard + ESP01 RST Breadboard + bron Sluit de FTDI adapter nu aan je computer, zodra deze power heeft, staat de ESP01 in flash mode. Previous","title":"ESP01FlashMode"},{"location":"ESP01FlashMode/#esp01-flash-mode","text":"De ESP-01 heeft geen flash/reset \"knopje\" en vereist dat GPIO0 naar GND gepulled wordt en GPIO2 high naar 3.3v om in flash mode te komen. Er zijn hier meerdere wegen naar Rome mogelijk. Het makkelijkst kan dit met een ESP programmer. Deze zijn goedkoop verkrijgbaar, maar vereisen mogelijk modificaties voor de ESP01. Hier vind je een beschrijving hoe je zelf zo'n programmer kunt maken. Heb je een breadboard en een FTDI serial USB adapter voor handen, dan kun je daarmee zelf ook een programmer mee maken door het op de volgende manier aansluiten van deze onderdelen. van naar FTDI GND Breadboard - FTDI +3.3v Breadboard + FTDI TX ESP01 RX FTDI RX ESP01 TX ESP01 GPIO2 Breadboard + ESP01 GPIO0 Breadboard - ESP01 GND Breadboard - ESP01 3v3 Breadboard + ESP01 RST Breadboard + bron Sluit de FTDI adapter nu aan je computer, zodra deze power heeft, staat de ESP01 in flash mode. Previous","title":"ESP01 - Flash mode"},{"location":"bouwbeschrijvingV3/","text":"Bouwbeschrijving DSMR-logger V3 Een bouwpakket is hier verkrijgbaar Inhoud Opencircuit bouwpakket Aantal Item PCB label 1x PCB - 1x ESP8266-ESP-01 Black edition - 1x BC547 Q1 1x MCP1700-3v3 U1 1x 1K \u03a9 weerstand (bruin,zwart,rood) R1 2x 2K2 \u03a9 weerstand (rood,rood,rood) R2,R3 3x 10K \u03a9 weerstand (bruin,zwart,oranje) R4,R5,R6 1x Elco 1\u00b5F C1 1x Elco 2.2\u00b5F C2 1x Elco 1000\u00b5F C3 1x Socket connector 4x2 J2 1x RJ12 Socket connector J1 1x RJ12 kabel - Solderen Begin met de laagste componenten: Plaats: R4, R5 en R6, plaats deze plat. Weerstanden hebben geen polariteit, de richting maakt dus niet uit. Plaats R1,R2,R3 rechtop. Plaats Q1 en U1 - de soldeer pads zijn klein en liggen dicht bij elkaar, wees zorgvuldig en neem de tijd. De Elco's hebben wel polariteit, de negatieve pool is te zien aan de lichtere streep op de zijkant. Op de PCB is deze kant aangegeven met een witte helft. Daar moet de negatieve pool op worden aangesloten. Plaats C1, C2 en C3 met de juiste negatieve pool en de correcte Elco. Plaats J2 en J1 Als alles goed vast zit, dan is het bordje klaar! De ESP01 word uiteindelijk in de socket geplaatst, maar moet eerst nog worden geflashed met de DSMRlogger2HTTP firmware voordat hij kan gaan loggen. Dit doen we via de computer en de Arduino IDE.","title":"bouwbeschrijving"},{"location":"bouwbeschrijvingV3/#bouwbeschrijving-dsmr-logger-v3","text":"Een bouwpakket is hier verkrijgbaar","title":"Bouwbeschrijving DSMR-logger V3"},{"location":"bouwbeschrijvingV3/#inhoud-opencircuit-bouwpakket","text":"Aantal Item PCB label 1x PCB - 1x ESP8266-ESP-01 Black edition - 1x BC547 Q1 1x MCP1700-3v3 U1 1x 1K \u03a9 weerstand (bruin,zwart,rood) R1 2x 2K2 \u03a9 weerstand (rood,rood,rood) R2,R3 3x 10K \u03a9 weerstand (bruin,zwart,oranje) R4,R5,R6 1x Elco 1\u00b5F C1 1x Elco 2.2\u00b5F C2 1x Elco 1000\u00b5F C3 1x Socket connector 4x2 J2 1x RJ12 Socket connector J1 1x RJ12 kabel -","title":"Inhoud Opencircuit bouwpakket"},{"location":"bouwbeschrijvingV3/#solderen","text":"Begin met de laagste componenten: Plaats: R4, R5 en R6, plaats deze plat. Weerstanden hebben geen polariteit, de richting maakt dus niet uit. Plaats R1,R2,R3 rechtop. Plaats Q1 en U1 - de soldeer pads zijn klein en liggen dicht bij elkaar, wees zorgvuldig en neem de tijd. De Elco's hebben wel polariteit, de negatieve pool is te zien aan de lichtere streep op de zijkant. Op de PCB is deze kant aangegeven met een witte helft. Daar moet de negatieve pool op worden aangesloten. Plaats C1, C2 en C3 met de juiste negatieve pool en de correcte Elco. Plaats J2 en J1 Als alles goed vast zit, dan is het bordje klaar! De ESP01 word uiteindelijk in de socket geplaatst, maar moet eerst nog worden geflashed met de DSMRlogger2HTTP firmware voordat hij kan gaan loggen. Dit doen we via de computer en de Arduino IDE.","title":"Solderen"},{"location":"clonenFirmware/","text":"clonen Firmware Download of clone deze repository https://github.com/mrWheel/DSMRlogger2HTTP Als je de repository hebt gedownload en unzipped, hernoem de directory naar DSMRlogger2HTTP (verwijder -master van de naam) In de DSMRlogger2HTTP directory, dubbelklik op DSMRlogger2HTTP.ino , de ArduinoIDE zal nu openen met deze sketch.","title":"Clonen van github"},{"location":"clonenFirmware/#clonen-firmware","text":"Download of clone deze repository https://github.com/mrWheel/DSMRlogger2HTTP Als je de repository hebt gedownload en unzipped, hernoem de directory naar DSMRlogger2HTTP (verwijder -master van de naam) In de DSMRlogger2HTTP directory, dubbelklik op DSMRlogger2HTTP.ino , de ArduinoIDE zal nu openen met deze sketch.","title":"clonen Firmware"},{"location":"gh-pages/","text":"Github pages onderhouden Als je wil bijdragen aan een project in github moet je dat project eerst 'clonen'. Ik vond hier een aardige post over de stappen die je dan moet nemen. In de basis komt het erop neer dat je een kopie (fork) van deze repository maakt en dan met dit kopie aan de gang gaat. Uiteindelijk ben je klaar met je aanpassingen en kun je een merge request naar mij sturen. Het onderstaande blijft dan geldig maar gebeurd op je ge-forkte repository. Voer, in een command window, de volgende commando's in: cd waar je de boel wilt hebben git clone https://github.com/ jouw-repository-username /DSMRlogger2HTTP.git cd DSMRlogger2HTTP cd mkdocs In de mkdocs map zit een map docs met daarin alle .md bestanden. Pas deze naar hartelust aan. Je kunt vervolgens lokaal een server starten met het commando: mkdocs serve Ga vervolgens met een browser naar http://127.0.0.1:8000 om je werk te bekijken. Als je tevreden bent dan moet je de aangepaste sources naar github pushen: mkdocs build git add mkdocs/ 1e file dat je veranderd hebt git add mkdocs/ 2e file dat je veranderd hebt git commit -m reden van deze commit git push Ga vervolgens naar github en naar jouw versie van DSMRlogger2HTTP en klik op de pull Request knop boven in het scherm en klik vervolgens op de groene Create pull request knop, voer een duidelijke beschrijving in van wat je hebt aangepast en klik nogmaals op de groene Create pull request knop. Ik moet vervolgens het volgende doen: Ik ga naar mijn versie van de repository Klik vervolgens op de Pull requests knop Klik op een request Klik op de omschrijving om de aanpassingen te zien Geef aan dat er nog andere dingen moeten worden aangepast Als de aanpassingen niet goed zijn klik op de Close knop Klik anders op de Merge pull request knop Klaar!","title":"Github pages onderhouden"},{"location":"gh-pages/#github-pages-onderhouden","text":"Als je wil bijdragen aan een project in github moet je dat project eerst 'clonen'. Ik vond hier een aardige post over de stappen die je dan moet nemen. In de basis komt het erop neer dat je een kopie (fork) van deze repository maakt en dan met dit kopie aan de gang gaat. Uiteindelijk ben je klaar met je aanpassingen en kun je een merge request naar mij sturen. Het onderstaande blijft dan geldig maar gebeurd op je ge-forkte repository. Voer, in een command window, de volgende commando's in: cd waar je de boel wilt hebben git clone https://github.com/ jouw-repository-username /DSMRlogger2HTTP.git cd DSMRlogger2HTTP cd mkdocs In de mkdocs map zit een map docs met daarin alle .md bestanden. Pas deze naar hartelust aan. Je kunt vervolgens lokaal een server starten met het commando: mkdocs serve Ga vervolgens met een browser naar http://127.0.0.1:8000 om je werk te bekijken. Als je tevreden bent dan moet je de aangepaste sources naar github pushen: mkdocs build git add mkdocs/ 1e file dat je veranderd hebt git add mkdocs/ 2e file dat je veranderd hebt git commit -m reden van deze commit git push Ga vervolgens naar github en naar jouw versie van DSMRlogger2HTTP en klik op de pull Request knop boven in het scherm en klik vervolgens op de groene Create pull request knop, voer een duidelijke beschrijving in van wat je hebt aangepast en klik nogmaals op de groene Create pull request knop. Ik moet vervolgens het volgende doen: Ik ga naar mijn versie van de repository Klik vervolgens op de Pull requests knop Klik op een request Klik op de omschrijving om de aanpassingen te zien Geef aan dat er nog andere dingen moeten worden aangepast Als de aanpassingen niet goed zijn klik op de Close knop Klik anders op de Merge pull request knop Klaar!","title":"Github pages onderhouden"},{"location":"installatieArduinoIDE/","text":"installatie ArduinoIDE Download en installeer Arduino IDE Open Arduino Ga naar preferences Additional Boards Manager URL\u2019s Voer in: http://arduino.esp8266.com/stable/package_esp8266com_index.json Sluit Arduino af. Download Arduino ESP8266 filesystem uploader en volg de installatie instructies. Dit voegt een menu item toe aan ArduinoIDE wat we nodig hebben om de Data -map die bij de sketch hoort te uploaden.","title":"Installatie ArduinoIDE"},{"location":"installatieArduinoIDE/#installatie-arduinoide","text":"Download en installeer Arduino IDE Open Arduino Ga naar preferences Additional Boards Manager URL\u2019s Voer in: http://arduino.esp8266.com/stable/package_esp8266com_index.json Sluit Arduino af. Download Arduino ESP8266 filesystem uploader en volg de installatie instructies. Dit voegt een menu item toe aan ArduinoIDE wat we nodig hebben om de Data -map die bij de sketch hoort te uploaden.","title":"installatie ArduinoIDE"},{"location":"installatieBibliotheken/","text":"Installatie Bibliotheken In Arduino, ga naar Sketch Include Library Manage Libraries... Gebruik het zoekveld voor de volgende libraries en installeer deze: WiFiManager by tzapu Time by Michael Margolis Download deze libraries handmatig als zip : https://github.com/jandrassy/TelnetStream https://github.com/matthijskooijman/arduino-dsmr Terug in Arduino, ga naar Sketch Include Library Add .ZIP Library... Voeg de 2 losse zip files toe.","title":"Installatie Bibliotheken"},{"location":"installatieBibliotheken/#installatie-bibliotheken","text":"In Arduino, ga naar Sketch Include Library Manage Libraries... Gebruik het zoekveld voor de volgende libraries en installeer deze: WiFiManager by tzapu Time by Michael Margolis Download deze libraries handmatig als zip : https://github.com/jandrassy/TelnetStream https://github.com/matthijskooijman/arduino-dsmr Terug in Arduino, ga naar Sketch Include Library Add .ZIP Library... Voeg de 2 losse zip files toe.","title":"Installatie Bibliotheken"},{"location":"uploadenDataMap/","text":"upload Data map","title":"Upload Data ESP-01"},{"location":"uploadenDataMap/#upload-data-map","text":"","title":"upload Data map"},{"location":"uploadenFirmware/","text":"uploaden Firmware naar ESP8266 De ESP01 heeft geen ingebouwde flash logica. Om toch aan de ESP01 duidelijk te maken dat je er firmware naar toe wilt sturen (flashen) moet je de ESP01 bij het opstarten in deze flash mode zetten door een paar GPIO-pinnen Hoog (3v3) of juist Laag (GND) te maken. Hier staat beschreven hoe je dat kunt doen. Als de ESP01 eenmaal in flash mode staat kun je de firmware er eenvoudig naartoe sturen door op deze knop te klikken. Sluit de ESP01 aan op je computer en zet deze in flash mode dmv een ESP programmer of FTDI adapter. Meer informatie hierover kun je hier vinden. Gebruik deze instellingen: - Board: Generic ESP8266 Module - Flash mode: DOUT - Flash size: 1M (128K SPIFFS) - Debug port: Disabled - Debug Level: None - IwIP Variant: v2 Lower Memory - Reset Method: nodemcu // -- op basis van de programmer die je gebruikt - Crystal Frequency: 26 MHz - Flash Frequency: 40MHz - CPU Frequency: 80 MHz - Buildin Led: 1 // GPIO01 - Pin 2 - Upload Speed: 115200 - Erase Flash: Only Sketch - Port: Serial Port COMx // - de poort waar je programmer op zit uploaden Data map nog doen!!! WiFi Haal de ESP01 van de programmer/breadboard af en stop hem in de socket van de logger. Sluit de logger aan op de P1 poort van de \"slimme meter\". Hij zal gaan booten en maakt zijn eigen accesspoint. Dit kun je zien aan het blauwe lampje wat zal gaan knipperen. Via je computer/mobiel, bekijk de Wifi netwerken, hier zul je een ESP01\u2011DSMR\u2011xx\u2011 IPaddress tussen zien staan: connect. Zodra je verbonden bent, open de browser en ga naar ip adres wat de naam van het accesspoint staat bijv 192.168.5.1 Klik op Configure WiFi Selecteer je eigen accesspoint Typ het password Klik save De logger zal rebooten en connectie maken met je accesspoint. Tijdens het opstarten kun je aan de blauwe led zien wat de DSMR-logger aan het doen is: 3 x langzaam knipperen \u2013 initi\u00eble start 5 x snel knipperen \u2013 verbinding gemaakt met WiFi netwerk Daarna knippert de blauwe led iedere keer als er een nieuw telegram verwerkt wordt. Als de led, na de eerste drie keer langzaam knipperen blijft branden, dan kon de DSMR-logger geen verbinding met jouw WiFi netwerk maken en start hij weer zijn eigen AP op en zal je WiFi procedure opnieuw moeten doen. Zodra hij geconnecteerd is open een browser en ga naar: Zodra hij geconnecteerd is open een browser en ga naar: http://ESP01-DSMR.local/ of http:// ip adres van de ESP In de browser zul je nu FileNotFound zien, dat is een goed teken. Nu kunnen we software via Arduino \"over the air\" uploaden. Je kunt ook telnet IP adres gebruiken, hier zie je direct de data van de logger langs komen. Meteen ook een teken of het goed werkt. Om te bepalen welk IP is uitgegeven aan de ESP door de DHCP server, kun je in je router kijken, of met bijv de Fing app of met nmap .","title":"Uploaden naar ESP-01"},{"location":"uploadenFirmware/#uploaden-firmware-naar-esp8266","text":"De ESP01 heeft geen ingebouwde flash logica. Om toch aan de ESP01 duidelijk te maken dat je er firmware naar toe wilt sturen (flashen) moet je de ESP01 bij het opstarten in deze flash mode zetten door een paar GPIO-pinnen Hoog (3v3) of juist Laag (GND) te maken. Hier staat beschreven hoe je dat kunt doen. Als de ESP01 eenmaal in flash mode staat kun je de firmware er eenvoudig naartoe sturen door op deze knop te klikken. Sluit de ESP01 aan op je computer en zet deze in flash mode dmv een ESP programmer of FTDI adapter. Meer informatie hierover kun je hier vinden. Gebruik deze instellingen: - Board: Generic ESP8266 Module - Flash mode: DOUT - Flash size: 1M (128K SPIFFS) - Debug port: Disabled - Debug Level: None - IwIP Variant: v2 Lower Memory - Reset Method: nodemcu // -- op basis van de programmer die je gebruikt - Crystal Frequency: 26 MHz - Flash Frequency: 40MHz - CPU Frequency: 80 MHz - Buildin Led: 1 // GPIO01 - Pin 2 - Upload Speed: 115200 - Erase Flash: Only Sketch - Port: Serial Port COMx // - de poort waar je programmer op zit","title":"uploaden Firmware naar ESP8266"},{"location":"uploadenFirmware/#uploaden-data-map","text":"nog doen!!!","title":"uploaden Data map"},{"location":"uploadenFirmware/#wifi","text":"Haal de ESP01 van de programmer/breadboard af en stop hem in de socket van de logger. Sluit de logger aan op de P1 poort van de \"slimme meter\". Hij zal gaan booten en maakt zijn eigen accesspoint. Dit kun je zien aan het blauwe lampje wat zal gaan knipperen. Via je computer/mobiel, bekijk de Wifi netwerken, hier zul je een ESP01\u2011DSMR\u2011xx\u2011 IPaddress tussen zien staan: connect. Zodra je verbonden bent, open de browser en ga naar ip adres wat de naam van het accesspoint staat bijv 192.168.5.1 Klik op Configure WiFi Selecteer je eigen accesspoint Typ het password Klik save De logger zal rebooten en connectie maken met je accesspoint. Tijdens het opstarten kun je aan de blauwe led zien wat de DSMR-logger aan het doen is: 3 x langzaam knipperen \u2013 initi\u00eble start 5 x snel knipperen \u2013 verbinding gemaakt met WiFi netwerk Daarna knippert de blauwe led iedere keer als er een nieuw telegram verwerkt wordt. Als de led, na de eerste drie keer langzaam knipperen blijft branden, dan kon de DSMR-logger geen verbinding met jouw WiFi netwerk maken en start hij weer zijn eigen AP op en zal je WiFi procedure opnieuw moeten doen. Zodra hij geconnecteerd is open een browser en ga naar: Zodra hij geconnecteerd is open een browser en ga naar: http://ESP01-DSMR.local/ of http:// ip adres van de ESP In de browser zul je nu FileNotFound zien, dat is een goed teken. Nu kunnen we software via Arduino \"over the air\" uploaden. Je kunt ook telnet IP adres gebruiken, hier zie je direct de data van de logger langs komen. Meteen ook een teken of het goed werkt. Om te bepalen welk IP is uitgegeven aan de ESP door de DHCP server, kun je in je router kijken, of met bijv de Fing app of met nmap .","title":"WiFi"},{"location":"verschillenESP01ESP01S/","text":"verschillen ESP01 (black) en ESP-01S","title":"Verschillen ESP-01 modules'"},{"location":"verschillenESP01ESP01S/#verschillen-esp01-black-en-esp-01s","text":"","title":"verschillen ESP01 (black) en ESP-01S"}]}